{"ast":null,"code":"/*! @license DOMPurify 2.3.1 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.1/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.DOMPurify = factory());\n})(this, function () {\n  'use strict';\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n  var hasOwnProperty = Object.hasOwnProperty,\n    setPrototypeOf = Object.setPrototypeOf,\n    isFrozen = Object.isFrozen,\n    getPrototypeOf = Object.getPrototypeOf,\n    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  var freeze = Object.freeze,\n    seal = Object.seal,\n    create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n    apply = _ref.apply,\n    construct = _ref.construct;\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n  var regExpTest = unapply(RegExp.prototype.test);\n  var typeErrorCreate = unconstruct(TypeError);\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return apply(func, thisArg, args);\n    };\n  }\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return construct(func, args);\n    };\n  }\n\n  /* Add properties to a lookup table */\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n    var l = array.length;\n    while (l--) {\n      var element = array[l];\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n          element = lcElement;\n        }\n      }\n      set[element] = true;\n    }\n    return set;\n  }\n\n  /* Shallow clone an object */\n  function clone(object) {\n    var newObject = create(null);\n    var property = void 0;\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n    return newObject;\n  }\n\n  /* IE10 doesn't support __lookupGetter__ so lets'\n   * simulate it. It also automatically checks\n   * if the prop is function or getter and behaves\n   * accordingly. */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      var desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n      object = getPrototypeOf(object);\n    }\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n    return fallbackValue;\n  }\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'feimage', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  var text = freeze(['#text']);\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  function _toConsumableArray$1(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '2.3.1';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n    var originalDocument = window.document;\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n      HTMLTemplateElement = window.HTMLTemplateElement,\n      Node = window.Node,\n      Element = window.Element,\n      NodeFilter = window.NodeFilter,\n      _window$NamedNodeMap = window.NamedNodeMap,\n      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n      Text = window.Text,\n      Comment = window.Comment,\n      DOMParser = window.DOMParser,\n      trustedTypes = window.trustedTypes;\n    var ElementPrototype = Element.prototype;\n    var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    var getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n    var _document = document,\n      implementation = _document.implementation,\n      createNodeIterator = _document.createNodeIterator,\n      createDocumentFragment = _document.createDocumentFragment,\n      getElementsByTagName = _document.getElementsByTagName;\n    var importNode = originalDocument.importNode;\n    var documentMode = {};\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n      ERB_EXPR$$1 = ERB_EXPR,\n      DATA_ATTR$$1 = DATA_ATTR,\n      ARIA_ATTR$$1 = ARIA_ATTR,\n      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    var SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify.\n     *\n     * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n     * might cause XSS from attacks hidden in closed shadowroots in case the browser\n     * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n     */\n    var RETURN_DOM_IMPORT = true;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    var RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    var IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    var USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = null;\n    var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    var NAMESPACE = HTML_NAMESPACE;\n    var IS_EMPTY_INPUT = false;\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n      CONFIG = cfg;\n    };\n    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    var ALL_SVG_TAGS = addToSet({}, svg);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n    var ALL_MATHML_TAGS = addToSet({}, mathMl);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    var _checkValidNamespace = function _checkValidNamespace(element) {\n      var parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: HTML_NAMESPACE,\n          tagName: 'template'\n        };\n      }\n      var tagName = stringToLowerCase(element.tagName);\n      var parentTagName = stringToLowerCase(parent.tagName);\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // Certain elements are allowed in both SVG and HTML\n        // namespace. We need to specify them explicitly\n        // so that they don't get erronously deleted from\n        // HTML namespace.\n        var commonSvgAndHTMLElements = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG or MathML). Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        try {\n          node.outerHTML = emptyHTML;\n        } catch (_) {\n          node.remove();\n        }\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n        } catch (_) {}\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n      var body = doc.body || doc.documentElement;\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    var _isClobbered = function _isClobbered(elm) {\n      if (elm instanceof Text || elm instanceof Comment) {\n        return false;\n      }\n      if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function') {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check if tagname contains Unicode */\n      if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      var tagName = stringToLowerCase(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Mitigate a problem with templates inside select */\n      if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n          if (childNodes && parentNode) {\n            var childCount = childNodes.length;\n            for (var i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$$1, lcName)) ;else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ;else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        return false;\n\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ;else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ;else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ;else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ;else if (!value) ;else {\n        return false;\n      }\n      return true;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n      var attributes = currentNode.attributes;\n\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n          name = _attr.name,\n          namespaceURI = _attr.namespaceURI;\n        value = stringTrim(attr.value);\n        lcName = stringToLowerCase(name);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n\n        /* Is `value` valid for this attribute? */\n        var lcTag = currentNode.nodeName.toLowerCase();\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n      var shadowIterator = _createIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n\n      /* Check we can run. Otherwise fall back or ignore */\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n      if (IN_PLACE) ;else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : emptyHTML;\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n        oldNode = currentNode;\n      }\n      oldNode = null;\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n        if (RETURN_DOM_IMPORT) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n        return returnNode;\n      }\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n      var lcTag = stringToLowerCase(tag);\n      var lcName = stringToLowerCase(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n    return DOMPurify;\n  }\n  var purify = createDOMPurify();\n  return purify;\n});","map":{"version":3,"names":["hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","Reflect","apply","_ref","construct","fun","thisValue","args","x","Func","Function","prototype","bind","concat","_toConsumableArray","arrayForEach","unapply","Array","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","length","_key","_len2","_key2","addToSet","set","array","l","element","lcElement","clone","object","newObject","property","lookupGetter","prop","desc","get","value","fallbackValue","console","warn","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","html$1","svg$1","mathMl$1","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","_typeof","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","_","createDOMPurify","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","RETURN_TRUSTED_TYPE","_document","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","_toConsumableArray$1","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","commonSvgAndHTMLElements","_forceRemove","node","parentNode","removeChild","outerHTML","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","childCount","i","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify"],"sources":["C:\\Users\\megha\\OneDrive\\Desktop\\invoice-generator\\node_modules\\dompurify\\src\\utils.js","C:\\Users\\megha\\OneDrive\\Desktop\\invoice-generator\\node_modules\\dompurify\\src\\tags.js","C:\\Users\\megha\\OneDrive\\Desktop\\invoice-generator\\node_modules\\dompurify\\src\\attrs.js","C:\\Users\\megha\\OneDrive\\Desktop\\invoice-generator\\node_modules\\dompurify\\src\\regexp.js","C:\\Users\\megha\\OneDrive\\Desktop\\invoice-generator\\node_modules\\dompurify\\src\\purify.js"],"sourcesContent":["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'feimage',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    Text,\n    Comment,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML =\n    trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML('')\n      : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify.\n   *\n   * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n   * might cause XSS from attacks hidden in closed shadowroots in case the browser\n   * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n   */\n  let RETURN_DOM_IMPORT = true;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  let SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR)\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS)\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erronously deleted from\n      // HTML namespace.\n      const commonSvgAndHTMLElements = addToSet({}, [\n        'title',\n        'style',\n        'font',\n        'a',\n        'script',\n      ]);\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (\n      typeof elm.nodeName !== 'string' ||\n      typeof elm.textContent !== 'string' ||\n      typeof elm.removeChild !== 'function' ||\n      !(elm.attributes instanceof NamedNodeMap) ||\n      typeof elm.removeAttribute !== 'function' ||\n      typeof elm.setAttribute !== 'function' ||\n      typeof elm.namespaceURI !== 'string' ||\n      typeof elm.insertBefore !== 'function'\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = stringToLowerCase(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = stringTrim(attr.value);\n      lcName = stringToLowerCase(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = currentNode.nodeName.toLowerCase();\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = stringToLowerCase(tag);\n    const lcName = stringToLowerCase(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}